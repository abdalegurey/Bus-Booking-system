import React, { useEffect, useState } from 'react';
import { useTheme } from '../Context/ThemeContext';
import { useAuth } from '../Context/AuthContext';
import supabase from '../Lib/supabase';
import { useParams } from 'react-router-dom';
import { FaBusAlt, FaMapMarkerAlt, FaClock, FaDollarSign, FaIdCard } from "react-icons/fa";
import toast from 'react-hot-toast';

const Booking = () => {
  const { theme } = useTheme();
  const { user } = useAuth();
  const { id } = useParams();

  const [schedule, setSchedule] = useState(null);
  const [selectedDay, setSelectedDay] = useState("");
  const [username, setUsername] = useState("");

  useEffect(() => {
    const fetchSchedule = async () => {
      const { data, error } = await supabase
        .from("Schedules")
        .select(`id, departure_time, price, days_of_week, Buses(name, plate_number), Routes(From_city, To_city)`)
        .eq("id", id)
        .single();

      if (!error) setSchedule(data);
      else console.error("Error fetching schedule:", error);
    };

    const fetchUserData = async () => {
      if (user && user.id) {
        const { data, error } = await supabase
          .from("users") // Make sure table name matches Supabase (case sensitive)
          .select("username")
          .eq("id", user.id)
          .single();

        if (!error && data) {
          setUsername(data.username);
        } else {
          console.error("Error fetching user data:", error);
        }
      }
    };

    fetchSchedule();
    fetchUserData();
  }, [id, user]);

  const handleBooking = async () => {
    if (!user) {
      toast.error("Fadlan login samee si aad u sameyso booking.");
      return;
    }

    if (!selectedDay) {
      toast.error("Fadlan dooro maalin.");
      return;
    }

    const { error } = await supabase.from("Bookings").insert({
      user_id: user.id,
      schedule_id: id,
      username,
      day: selectedDay,
      status: "pending",
    });

    if (!error) {
      toast.success("‚úÖ Booking waa la sameeyay!");
    } else {
      console.error("Booking error:", error);
      toast.error("‚ùå Booking ma shaqeyn. Fadlan isku day mar kale.");
    }
  };

  if (!schedule) return <p className="text-center p-10">‚è≥ Loading...</p>;

  return (
    <div className={`min-h-screen py-12 px-4 sm:px-6 lg:px-8 transition duration-300 ${theme === 'dark' ? 'bg-gray-900 text-white' : 'bg-gradient-to-br from-gray-50 to-blue-100 text-gray-900'}`}>
      <div className="max-w-2xl mx-auto bg-white dark:bg-gray-800/80 shadow-xl rounded-3xl p-8">
        <h2 className="text-3xl font-extrabold text-center mb-6">üé´ Booking Confirmation</h2>

        {username && (
          <div className="flex items-center gap-3 mb-4">
            <FaIdCard className="text-indigo-500 text-lg" />
            <p><strong>User:</strong> {username}</p>
          </div>
        )}

        <div className="space-y-4 text-md">
          <div className="flex items-center gap-3">
            <FaBusAlt className="text-blue-500 text-lg" />
            <p><strong>Bus:</strong> {schedule.Buses.name}</p>
          </div>
          <div className="flex items-center gap-3">
            <FaIdCard className="text-indigo-500 text-lg" />
            <p><strong>Plate Number:</strong> {schedule.Buses.plate_number}</p>
          </div>
          <div className="flex items-center gap-3">
            <FaMapMarkerAlt className="text-green-500 text-lg" />
            <p><strong>From:</strong> {schedule.Routes.From_city}</p>
          </div>
          <div className="flex items-center gap-3">
            <FaMapMarkerAlt className="text-red-500 text-lg rotate-180" />
            <p><strong>To:</strong> {schedule.Routes.To_city}</p>
          </div>
          <div className="flex items-center gap-3">
            <FaClock className="text-yellow-500 text-lg" />
            <p><strong>Time:</strong> {schedule.departure_time}</p>
          </div>
          <div className="flex items-center gap-3">
            <FaDollarSign className="text-green-600 text-lg" />
            <p><strong>Price:</strong> ${schedule.price}</p>
          </div>
          <div className="flex items-center gap-3">
            <label htmlFor="day-select"><strong>Select Day:</strong></label>
            <select
              id="day-select"
              value={selectedDay}
              onChange={(e) => setSelectedDay(e.target.value)}
              className="bg-gray-200 p-2 rounded-lg"
            >
              <option value="">Choose a day</option>
              {schedule.days_of_week.map((day, index) => (
                <option key={index} value={day}>{day}</option>
              ))}
            </select>
          </div>
        </div>

        <button
          onClick={handleBooking}
          className="mt-8 w-full bg-gradient-to-r from-blue-600 to-indigo-600 hover:opacity-90 text-white py-3 px-6 rounded-2xl text-lg font-semibold"
        >
          ‚úÖ Confirm Booking
        </button>
      </div>
    </div>
  );
};

export default Booking;
